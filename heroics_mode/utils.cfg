#textdomain wesnoth-drw

######
# Get/set current side's heroicness
###

#define SET_HEROIC
    {VARIABLE drw_heroics_on[$side_number] yes}
    {VARIABLE drw_heroics_recruits[$side_number] 0}
    
    # Make leaders heroic
    [store_unit]
        [filter]
            side=$side_number
            canrecruit=yes
        [/filter]
        variable=unit
    [/store_unit]
    {DRW_MAKE_HERO unit}
    {CLEAR_VARIABLE unit}
#enddef

#define SET_NOT_HEROIC
    {VARIABLE drw_heroics_on[$side_number] no}
#enddef

#define IF_HEROIC
    {VAREQ drw_heroics_on[$side_number] yes}
#enddef

#define IF_NOT_HEROIC
    {VAREQ drw_heroics_on[$side_number] no}
#enddef

######
# Standardized message boxen
###

# You may want to re-define this macro in order to get a custom portrait/look. 
# &remix
#define WESBOX CAPTION MSG MORE
    [message]
        speaker=narrator
        caption={CAPTION}
        image="data/campaigns/The_South_Guard/images/portraits/sir-gerrick.png"
        message={MSG}
        {MORE}
    [/message]
#enddef

#define HELPBOX MSG MORE
    {WESBOX (_"Heroics Mode Help") ({MSG}) ({MORE})}
#enddef

#define IMPROVEBOX MSG MORE
    {WESBOX (_"Improve Your Unit") ({MSG}) ({MORE})}
#enddef

#define STORE_THIS_SIDE
    [store_side]
        side=$side_number
        variable=drw_this_side
    [/store_side]
#enddef

# An easy way to put *one* newline into a string
#define NL

#enddef

######
# Attributes/abilities
###

{{DRW_DIR}/heroics_mode/attributes.cfg}

######
# Per-unit Heroics actions/information
###

# This macro sets hero variables for the unit stored in the specified variable. 
# It should be used by scenario and campaign developers to allow upgrading 
# heroic units -- units where drw_is_hero != yes will be off-limits. This 
# affects plagued units, for instance... &remix &devfor
#define DRW_MAKE_HERO UVAR
    {VARIABLE i $drw_next_index}
    
    {CHECK_HEROIC_INSPIRATION {UVAR}}
    {VARIABLE {UVAR}.variables.drw_is_hero yes}
    {VARIABLE {UVAR}.variables.drw_index $i}
    {VARIABLE drw_hero_stats[$i].attrs 0}
    
    {VARIABLE_OP drw_next_index add 1}
    {CLEAR_VARIABLE i}
    [unstore_unit]
        variable={UVAR}
        find_vacant=no
    [/unstore_unit]
#enddef

# This macro determines the rewards for leveling up, whether the unit is 
# AMLAing or not. Change as necessary. &remix
#define HEROIC_LEVELUP_POWERUP VAR LEVEL
    # Unit may have received leadership upon advancing
    {CHECK_HEROIC_INSPIRATION {VAR}}
    # See what sort of bonus to give out -- have we gained a level or not?
    {IF_ELSE {VAREQ drw_max no} (
        {VARIABLE_OP {DRW_PATH {VAR}}.attrs add 1}
    ) (
        {VARIABLE_OP {VAR}.level add 1}
        {VARIABLE_OP {DRW_PATH {VAR}}.attrs add 2}
        # The level we are leaving * 2 + 6; So the first AMLA of an Orcish 
        # Slayer nets 10gp. The ninth AMLA of a Marshal (leaving level 12) nets 
        # 30gp. 
        {VARIABLE temp_gold {LEVEL}}
        {VARIABLE_OP temp_gold multiply 2}
        {VARIABLE_OP temp_gold add 6}
        [gold]
            side=${VAR}.side
            amount=$temp_gold
        [/gold]
        {CLEAR_VARIABLE temp_gold}
    )}
    [unstore_unit]
        variable={VAR}
        find_vacant=no
    [/unstore_unit]
#enddef

# Returns the statbox path for the given unit.
#define DRW_PATH UVAR
drw_hero_stats[${UVAR}.variables.drw_index]#enddef